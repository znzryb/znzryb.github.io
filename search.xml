<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>CF-1004-D-Object-Identification</title>
    <url>/2025/02/13/CF-1004-D-Object-Identification/</url>
    <content><![CDATA[<h1 id="CF-1004-D-Object-Identification"><a href="#CF-1004-D-Object-Identification" class="headerlink" title="CF-1004-D. Object Identification"></a>CF-1004-D. Object Identification</h1><p>Tags: constructive 构造, graph, interactive problem 交互题, 思维, 贪心 greedy<br>Date: February 13, 2025<br>Difficulty Level: 1800, 绿题<br>Last Edited: February 13, 2025 7:32 PM<br>Source: codeforces<br>Status: AC<br>url: <a href="https://codeforces.com/contest/2067/problem/D">https://codeforces.com/contest/2067/problem/D</a></p>
<h2 id="思路讲解"><a href="#思路讲解" class="headerlink" title="思路讲解"></a>思路讲解</h2><p>没有在X中的一点，任何一个点都到达不了，因为在有向图中你不发出边是到达不了任何点的</p>
<p>如果所有点都在X中，那么就选择一个q1（X[i]&#x3D;&#x3D;1 时的i），一个q2（X[i]&#x3D;&#x3D;N 时的i），他们的曼哈顿距离≥N-1</p>
<p>但是在这个只有N条边的有向图上，你觉得q1到q2以及q2到q1的有向图路径都大于N-1嘛？显然不可能吧，没那么多边呀，借此就可以判断是有向图还是坐标了。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;  <span class="comment">// 这种情况难搞一点</span></span><br><span class="line">    <span class="comment">// 因为这种情况理论上来说甚至有可能每个点之间都相互联通在有向图上</span></span><br><span class="line">    <span class="comment">// 但我们可以利用曼哈顿距离的特性来解决</span></span><br><span class="line">    ll q1=<span class="number">0</span>, q2=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">      <span class="keyword">if</span> (X[i] == <span class="number">1</span>)</span><br><span class="line">        q1 = i;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (X[i] == N)</span><br><span class="line">        q2 = i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; q1 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; q2 &lt;&lt; endl;</span><br><span class="line">    ll dis1, dis2;</span><br><span class="line">    cin &gt;&gt; dis1;</span><br><span class="line">    <span class="keyword">if</span> (dis1 &lt; N - <span class="number">1</span>) &#123;  <span class="comment">// dis1比最小曼哈顿距离都小，肯定也不对</span></span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;! A&quot;</span> &lt;&lt; endl;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; q2 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; q1 &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; dis2;</span><br><span class="line">    <span class="keyword">if</span> (dis2 &lt; N - <span class="number">1</span>) &#123;  <span class="comment">// dis2比最小曼哈顿距离都小，肯定也不对</span></span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;! A&quot;</span> &lt;&lt; endl;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;! B&quot;</span> &lt;&lt; endl;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h2><p>AC</p>
<p><a href="https://codeforces.com/contest/2067/submission/305909277">https://codeforces.com/contest/2067/submission/305909277</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: D. Object Identification</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1004 (Div. 2)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2067/problem/D</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOCAL</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">2e5</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, T, X[MAXN];</span><br><span class="line"><span class="type">bool</span> vis[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N;</span><br><span class="line">  <span class="keyword">if</span> (N == <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123; vis[i] = <span class="literal">false</span>; &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    cin &gt;&gt; X[i];</span><br><span class="line">    vis[X[i]] = <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  vector&lt;ll&gt; disN;  <span class="comment">// 没有在X中出现的点</span></span><br><span class="line">  ll app;           <span class="comment">// 随便取一个出现过的点</span></span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!vis[i])</span><br><span class="line">      disN.<span class="built_in">pb</span>(i);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      app = i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">SZ</span>(disN) &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// 没有在X中的一点，任何一个点都到达不了，因为在有向图中你不发出边是到达不了任何点的</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; disN[<span class="number">0</span>] &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; app &lt;&lt; endl;</span><br><span class="line">    ll dis;</span><br><span class="line">    cin &gt;&gt; dis;</span><br><span class="line">    <span class="keyword">if</span> (dis == <span class="number">0</span>)</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;! A&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;! B&quot;</span> &lt;&lt; endl;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;  <span class="comment">// 这种情况难搞一点</span></span><br><span class="line">    <span class="comment">// 因为这种情况理论上来说甚至有可能每个点之间都相互联通在有向图上</span></span><br><span class="line">    <span class="comment">// 但我们可以利用曼哈顿距离的特性来解决</span></span><br><span class="line">    ll q1=<span class="number">0</span>, q2=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">      <span class="keyword">if</span> (X[i] == <span class="number">1</span>)</span><br><span class="line">        q1 = i;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (X[i] == N)</span><br><span class="line">        q2 = i;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; q1 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; q2 &lt;&lt; endl;</span><br><span class="line">    ll dis1, dis2;</span><br><span class="line">    cin &gt;&gt; dis1;</span><br><span class="line">    <span class="keyword">if</span> (dis1 &lt; N - <span class="number">1</span>) &#123;  <span class="comment">// dis1比最小曼哈顿距离都小，肯定也不对</span></span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;! A&quot;</span> &lt;&lt; endl;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;? &quot;</span> &lt;&lt; q2 &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; q1 &lt;&lt; endl;</span><br><span class="line">    cin &gt;&gt; dis2;</span><br><span class="line">    <span class="keyword">if</span> (dis2 &lt; N - <span class="number">1</span>) &#123;  <span class="comment">// dis2比最小曼哈顿距离都小，肯定也不对</span></span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;! A&quot;</span> &lt;&lt; endl;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;! B&quot;</span> &lt;&lt; endl;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="type">bool</span> flag = <span class="built_in">solve</span>();</span><br><span class="line">    <span class="keyword">if</span> (!flag) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2067/submission/305909277</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>codeforces题解</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 1003 (Div. 4) (C1 - F题解)</title>
    <url>/2025/02/13/Codeforces-Round-1003-Div-4/</url>
    <content><![CDATA[<h2 id="C1-Skibidus-and-Fanum-Tax-easy-version"><a href="#C1-Skibidus-and-Fanum-Tax-easy-version" class="headerlink" title="C1. Skibidus and Fanum Tax (easy version)"></a>C1. Skibidus and Fanum Tax (easy version)</h2><p>还WA了两次，不算特别会做这种题目<br>第一次WA记载在了注释中，第二次WA是因为</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (t &lt; A[i] &amp;&amp; t &gt;= A[i - <span class="number">1</span>]) </span><br></pre></td></tr></table></figure>
<p>我把这里面的&gt;&#x3D;写成&lt;了</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: C1. Skibidus and Fanum Tax (easy version)</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1003 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2065/problem/C1</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">1e6</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, M, T, A[MAXN], B[MAXN];  <span class="comment">// backUp[MAXN];</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N &gt;&gt; M;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123; cin &gt;&gt; A[i]; &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, M) &#123; cin &gt;&gt; B[i]; &#125;</span><br><span class="line">  <span class="comment">// sort(A + 1, A + 1 + N);</span></span><br><span class="line">  A[<span class="number">0</span>] = -INF;</span><br><span class="line">  A[N + <span class="number">1</span>] = INF;  <span class="comment">// 确保越界也没事情</span></span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    ll t = B[<span class="number">1</span>] - A[i];</span><br><span class="line">    <span class="keyword">if</span> (t &lt; A[i] &amp;&amp; t &gt;= A[i - <span class="number">1</span>]) &#123;</span><br><span class="line">      A[i] = t;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (A[i - <span class="number">1</span>] &gt; A[i] &amp;&amp; t &gt;= A[i - <span class="number">1</span>]) &#123;</span><br><span class="line">      A[i] = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (A[i] &lt; A[i - <span class="number">1</span>]) &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">WA</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2065/submission/306026186</span></span><br><span class="line"><span class="comment">1</span></span><br><span class="line"><span class="comment">4 1</span></span><br><span class="line"><span class="comment">3 4 1 5</span></span><br><span class="line"><span class="comment">5</span></span><br><span class="line"><span class="comment">会在这种数据上WA</span></span><br><span class="line"><span class="comment">他是指对每个i都能进行一次这种操作</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2065/submission/306027498</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="D-Skibidus-and-Sigma"><a href="#D-Skibidus-and-Sigma" class="headerlink" title="D. Skibidus and Sigma"></a>D. Skibidus and Sigma</h2><p>理论上可以对这个cmp再优化一下，但是还是算了，还可以，跑的还是很快的<br>就是对数组先根据总的sum降序排序，然后根据字典序降序排列，具体看代码里的cmp函数（32行）<br>不过我看了官解，好像只需要对sum排序就行，字典序有点多余了<br><img src="https://cdn.yunminitools.cn/znzrybPic/Screenshot%202025-02-14%20at%2012.52.04.png" alt="alt text"><br><a href="https://codeforces.com/blog/entry/139178">官解</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: D. Skibidus and Sigma</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1003 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2065/problem/D</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">1e6</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, M, T;</span><br><span class="line"><span class="comment">// ll sum[MAXN];</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> vector&lt;ll&gt;&amp; a, <span class="type">const</span> vector&lt;ll&gt;&amp; b)</span> </span>&#123;</span><br><span class="line">  ll suma = <span class="number">0</span>, sumb = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, <span class="built_in">SZ</span>(a) - <span class="number">1</span>) &#123;</span><br><span class="line">    suma += a[i];</span><br><span class="line">    sumb += b[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (suma != sumb) <span class="keyword">return</span> suma &gt; sumb;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, <span class="built_in">SZ</span>(a) - <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (a[i] != b[i]) <span class="keyword">return</span> a[i] &gt; b[i];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N &gt;&gt; M;</span><br><span class="line">  vector&lt;vector&lt;ll&gt; &gt; <span class="built_in">maze</span>(N + <span class="number">1</span>, <span class="built_in">vector</span>&lt;ll&gt;(M + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    <span class="built_in">FOR</span>(j, <span class="number">1</span>, M) &#123; cin &gt;&gt; maze[i][j]; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// #ifdef LOCAL</span></span><br><span class="line">  <span class="comment">// cerr &lt;&lt; &quot;OK1&quot; &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">  <span class="comment">// #endif</span></span><br><span class="line">  <span class="built_in">sort</span>(maze.<span class="built_in">begin</span>() + <span class="number">1</span>, maze.<span class="built_in">end</span>(),cmp);</span><br><span class="line">  vector&lt;vector&lt;ll&gt; &gt; <span class="built_in">sum</span>(N + <span class="number">1</span>, <span class="built_in">vector</span>&lt;ll&gt;(M + <span class="number">1</span>, <span class="number">0</span>));</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    sum[i][<span class="number">0</span>] = sum[i - <span class="number">1</span>][M];</span><br><span class="line">    <span class="built_in">FOR</span>(j, <span class="number">1</span>, M) &#123; sum[i][j] = sum[i][j - <span class="number">1</span>] + maze[i][j]; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// #ifdef LOCAL</span></span><br><span class="line">  <span class="comment">// cerr &lt;&lt; &quot;OK2&quot; &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">  <span class="comment">// #endif</span></span><br><span class="line">  ull ans = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    <span class="built_in">FOR</span>(j, <span class="number">1</span>, M) &#123; ans += sum[i][j]; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">// #ifdef LOCAL</span></span><br><span class="line">  <span class="comment">// FOR(i, 1, N) &#123;</span></span><br><span class="line">    <span class="comment">// FOR(j, 1, M) &#123; cerr &lt;&lt; maze[i][j] &lt;&lt; &quot; &quot;; &#125;</span></span><br><span class="line">    <span class="comment">// cerr &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// cerr &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line"><span class="comment">// #endif</span></span><br><span class="line">  cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2065/submission/306030103</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="C2-Skibidus-and-Fanum-Tax-hard-version"><a href="#C2-Skibidus-and-Fanum-Tax-hard-version" class="headerlink" title="C2. Skibidus and Fanum Tax (hard version)"></a>C2. Skibidus and Fanum Tax (hard version)</h2><p>和C1也差不多，就是注意一下没搜到的时候的处理，因为这个还WA了一次<br><a href="https://codeforces.com/contest/2065/submission/306079148">WA</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (idx &gt; M) &#123;  <span class="comment">// 这个代码逻辑有问题，不能没找到直接输出NO</span></span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://codeforces.com/contest/2065/submission/306081068">AC</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: C2. Skibidus and Fanum Tax (hard version)</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1003 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2065/problem/C2</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">1e6</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, M, T, A[MAXN], B[MAXN];  <span class="comment">// backUp[MAXN];</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N &gt;&gt; M;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123; cin &gt;&gt; A[i]; &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, M) &#123; cin &gt;&gt; B[i]; &#125;</span><br><span class="line">  A[<span class="number">0</span>] = -INF;</span><br><span class="line">  A[N + <span class="number">1</span>] = INF;  <span class="comment">// 确保越界也没事情</span></span><br><span class="line">  <span class="built_in">sort</span>(B + <span class="number">1</span>, B + M + <span class="number">1</span>);</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    ll idx = <span class="built_in">lower_bound</span>(B + <span class="number">1</span>, B + M + <span class="number">1</span>, A[i - <span class="number">1</span>] + A[i]) - B;</span><br><span class="line">    <span class="keyword">if</span> (idx &gt; M &amp;&amp; A[i] &lt; A[i - <span class="number">1</span>]) &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (idx &gt; M) &#123;</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll t = B[idx] - A[i];</span><br><span class="line">    <span class="keyword">if</span> (t &lt; A[i] &amp;&amp; t &gt;= A[i - <span class="number">1</span>]) &#123;</span><br><span class="line">      A[i] = t;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (A[i - <span class="number">1</span>] &gt; A[i] &amp;&amp; t &gt;= A[i - <span class="number">1</span>]) &#123;</span><br><span class="line">      A[i] = t;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">  <span class="comment">// #ifdef LOCAL</span></span><br><span class="line">  <span class="comment">// FOR(i, 1, N) &#123; cerr &lt;&lt; A[i] &lt;&lt; &#x27; &#x27;; &#125;</span></span><br><span class="line">  <span class="comment">// cerr &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">  <span class="comment">// FOR(i, 1, M) &#123; cerr &lt;&lt; B[i] &lt;&lt; &#x27; &#x27;; &#125;</span></span><br><span class="line">  <span class="comment">// cerr &lt;&lt; &quot;\n\n&quot;;</span></span><br><span class="line">  <span class="comment">// #endif</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">WA</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2065/submission/306079148</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2065/submission/306081068</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="E-Skibidus-and-Rizz"><a href="#E-Skibidus-and-Rizz" class="headerlink" title="E. Skibidus and Rizz"></a>E. Skibidus and Rizz</h2><p>构造题，呃也不算太擅长吧，没啥心得，看着做吧<br>然后是让我们构造一个串，子串的最大不平衡值恰好&#x3D;K</p>
<p>想不到直接AC，我的构造思路就是先输出K个c1，然后间隔输出c2，c1，c2，c1</p>
<p>(c1，c2的确定具体见代码，我不多赘述，总而言之就是字符多的当c1)</p>
<p><a href="https://codeforces.com/contest/2065/submission/306277287">AC</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: E. Skibidus and Rizz</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1003 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2065/problem/E</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1500 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">1e6</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, M, K, T, A[MAXN];</span><br><span class="line"><span class="comment">// char ans[MAXN];</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N &gt;&gt; M &gt;&gt; K;</span><br><span class="line">  <span class="comment">// N‘s 0 M&#x27;s 1</span></span><br><span class="line">  <span class="keyword">if</span> (N &lt; K &amp;&amp; M &lt; K) &#123;  <span class="comment">// 两个都&lt;K就没戏了</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">abs</span>(N - M) &gt; K) &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">char</span> c1, c2;</span><br><span class="line">  ll n1, n2;</span><br><span class="line">  <span class="keyword">if</span> (N &gt;= K &amp;&amp; N &gt; M)</span><br><span class="line">    c1 = <span class="string">&#x27;0&#x27;</span>, n1 = N, c2 = <span class="string">&#x27;1&#x27;</span>, n2 = M;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    c1 = <span class="string">&#x27;1&#x27;</span>, n1 = M, c2 = <span class="string">&#x27;0&#x27;</span>, n2 = N;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, K) &#123; cout &lt;&lt; c1; &#125;</span><br><span class="line">  n1 -= K;</span><br><span class="line">  <span class="type">bool</span> is1 = <span class="literal">false</span>;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N + M - K) &#123;</span><br><span class="line">    <span class="keyword">if</span> (is1 &amp;&amp; n1 &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      cout &lt;&lt; c1;</span><br><span class="line">      is1 = <span class="literal">false</span>;</span><br><span class="line">      n1 -= <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      cout &lt;&lt; c2;</span><br><span class="line">      is1 = <span class="literal">true</span>;</span><br><span class="line">      n2 -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2065/submission/306277287</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="F-Skibidus-and-Slay"><a href="#F-Skibidus-and-Slay" class="headerlink" title="F. Skibidus and Slay"></a>F. Skibidus and Slay</h2><p>non-trivial simple path —— 即非平凡简单路径，根据题目解释，其实就是简单路径，但必须包含两个顶点</p>
<p>以我的感觉，这是一道树上dp问题。</p>
<p>看了一下官解，发现没我想的那么复杂，想不到竟然用了一个看起来比较简单的问题转化就解决了。</p>
<p>其实就是如果需要让一段中的这个majority是1，其他是0，那么必定包括101以及11结构，那么只要判断是否有这个结构就可以了，不需要判断其他的。</p>
<p>还有一种辅助树做法，类似于树上dp问题<br><a href="https://www.luogu.com.cn/article/r22dep75">洛谷题解</a>不过好像也是需要用到这个trick的</p>
<p>然后注意邻接表要清空，以及时间复杂度（不用map直接扫会超时，TLE 16）</p>
<p><a href="https://codeforces.com/contest/2065/submission/306313351">AC</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: F. Skibidus and Slay</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1003 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2065/problem/F</span></span><br><span class="line"><span class="comment">// Memory Limit: 512 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 4000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e5</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, M, T, A[MAXN];</span><br><span class="line"><span class="type">bool</span> ans[MAXN];</span><br><span class="line">map&lt;ll, ll&gt; cnt[MAXN];</span><br><span class="line"><span class="comment">// ll dp[MAXN];</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    cin &gt;&gt; A[i];</span><br><span class="line">    ans[i] = <span class="literal">false</span>;</span><br><span class="line">    cnt[i].<span class="built_in">clear</span>();</span><br><span class="line">    cnt[i][A[i]] = <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N - <span class="number">1</span>) &#123;</span><br><span class="line">    ll u, v;</span><br><span class="line">    cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">    cnt[u][A[v]] = cnt[u].<span class="built_in">find</span>(A[v]) == cnt[u].<span class="built_in">end</span>() ? <span class="number">1</span> : cnt[u][A[v]] + <span class="number">1</span>;</span><br><span class="line">    cnt[v][A[u]] = cnt[v].<span class="built_in">find</span>(A[u]) == cnt[v].<span class="built_in">end</span>() ? <span class="number">1</span> : cnt[v][A[u]] + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    <span class="keyword">for</span> (map&lt;ll, ll&gt;::iterator it = cnt[i].<span class="built_in">begin</span>(); it != cnt[i].<span class="built_in">end</span>(); ++it) &#123;</span><br><span class="line">      <span class="keyword">if</span> (it-&gt;second &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">        ans[it-&gt;first] = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123; cout &lt;&lt; ans[i]; &#125;</span><br><span class="line">  cout &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">    <span class="comment">// #ifdef LOCAL</span></span><br><span class="line">    <span class="comment">// cerr &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">    <span class="comment">// #endif</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2065/submission/306313351</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="G-Skibidus-and-Capping"><a href="#G-Skibidus-and-Capping" class="headerlink" title="G. Skibidus and Capping"></a>G. Skibidus and Capping</h2><p>数论题，lcm最小公倍数LCM</p>
<p>如果想用程序求lcm也简单，用两数之积除以GCD就行了</p>
<p>当然以我浅薄的数论题经验，这个显然不可能真要你去求LCM,(O(n)时间上不太允许);<br><img src="https://cdn.yunminitools.cn/znzrybPic/image%2049.png" alt="alt text"><br>还有一个关于素因子的约数个数定理，和这道题目没有关系，不过可以用来做一些和约数个数相关的题目（约数个数&#x3D;不同素因子指数+1的连乘，具体见图）</p>
<p><a href="https://www.luogu.com.cn/article/8sdjs66m">洛谷题解</a></p>
<p>还有x&#x2F;ln(x)可以用于估计这个1-n区间内素数的多少</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>codeforces题解</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 1005 (Div. 2) A-D题解</title>
    <url>/2025/02/17/Codeforces-Round-1005-Div-2/</url>
    <content><![CDATA[<h2 id="A-Brogramming-Contest"><a href="#A-Brogramming-Contest" class="headerlink" title="A. Brogramming Contest"></a>A. Brogramming Contest</h2><p>主要就是统计一下最后一个0移动了多少次就行了（和他前面的1联通块数量有关）</p>
<p>总体时间复杂度O（n）</p>
<p><a href="https://codeforces.com/contest/2064/submission/306390761">AC</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: A. Brogramming Contest</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1005 (Div. 2)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2064/problem/A</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">1e3</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, M, T;</span><br><span class="line"><span class="type">char</span> A[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123; cin &gt;&gt; A[i]; &#125;</span><br><span class="line">  ll ans = <span class="number">0</span>;</span><br><span class="line">  <span class="type">bool</span> isConti0 = <span class="literal">false</span>, isConti1 = <span class="literal">false</span>,flag=<span class="literal">false</span>;</span><br><span class="line">  <span class="built_in">ROF</span>(i, N, <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (A[i] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; !isConti0) &#123;</span><br><span class="line">      isConti0 = <span class="literal">true</span>, isConti1 = <span class="literal">false</span>;</span><br><span class="line">      <span class="keyword">if</span>(!flag)&#123;</span><br><span class="line">      	ll cnt = <span class="number">0</span>;</span><br><span class="line">	      <span class="type">bool</span> isConti = <span class="literal">false</span>;</span><br><span class="line">	      <span class="built_in">ROF</span>(j, i - <span class="number">1</span>, <span class="number">1</span>) &#123;</span><br><span class="line">	        <span class="keyword">if</span> (A[j] == <span class="string">&#x27;1&#x27;</span> &amp;&amp; !isConti) &#123;</span><br><span class="line">	          ++cnt, isConti = <span class="literal">true</span>;</span><br><span class="line">	        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (A[j] == <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">	          isConti = <span class="literal">false</span>;</span><br><span class="line">	        &#125;</span><br><span class="line">	      &#125;</span><br><span class="line">	      ans += cnt;</span><br><span class="line">	      flag=<span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (A[i] == <span class="string">&#x27;1&#x27;</span> &amp;&amp; !isConti1) &#123;</span><br><span class="line">      isConti0 = <span class="literal">false</span>, isConti1 = <span class="literal">true</span>;</span><br><span class="line">      ++ans;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (A[i] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; isConti0) &#123;</span><br><span class="line">      isConti0 = <span class="literal">true</span>, isConti1 = <span class="literal">false</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (A[i] == <span class="string">&#x27;1&#x27;</span> &amp;&amp; isConti1) &#123;</span><br><span class="line">      isConti0 = <span class="literal">false</span>, isConti1 = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">pretest pass 4</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="B-Variety-is-Discouraged"><a href="#B-Variety-is-Discouraged" class="headerlink" title="B. Variety is Discouraged"></a>B. Variety is Discouraged</h2><p>其实这种只指定了substring的话，一般都有固定的操作模式，因为把所有l，r都遍历一遍就超时了，所以一般也不可能加速暴力计算</p>
<p>当然你说有没有可能是双指针，这个就需要具体分析了，主要还是这个计算用双指针没那么方便（这种计算没有可加性，不容易合并），所以也不太行</p>
<p>我们容易发现，这个只有删除只出现过一次的元素，才有可能让值保持不变，如果删除了一个重复出现过两次的元素，会直接让值下降，不符合题设</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">在样例中我们也发现，删除只是会让长度缩短，并不能增加得分</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">4</span></span><br><span class="line"><span class="number">2</span> <span class="number">1</span> <span class="number">3</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure>
<p><a href="https://codeforces.com/contest/2064/submission/306477034">AC</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: B. Variety is Discouraged</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1005 (Div. 2)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2064/problem/B</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1500 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">2e5</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, M, T, A[MAXN];  <span class="comment">// diff[MAXN], ndiff[MAXN],sum[MAXN],nsum[MAXN];</span></span><br><span class="line">ll cnt[MAXN], pos[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N;</span><br><span class="line">  <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    cnt[i] = <span class="number">0</span>;</span><br><span class="line">    pos[i] = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    cin &gt;&gt; A[i];</span><br><span class="line">    <span class="keyword">if</span> (A[i] != A[i - <span class="number">1</span>] &amp;&amp; i != <span class="number">1</span>) flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// cnt[A[i]] = cnt.find(A[i]) == cnt.end() ? 1 : cnt[A[i]] + 1;</span></span><br><span class="line">    cnt[A[i]] += <span class="number">1</span>;</span><br><span class="line">    pos[A[i]] = i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// if (flag &amp;&amp; N != 1) &#123;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; 0 &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">    <span class="comment">// return;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="comment">// if (N == 1) &#123;</span></span><br><span class="line">    <span class="comment">// cout &lt;&lt; 1 &lt;&lt; &#x27; &#x27; &lt;&lt; 1 &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line">    <span class="comment">// return;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  vector&lt;ll&gt; needDel;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    <span class="keyword">if</span> (cnt[i] == <span class="number">1</span>) &#123;</span><br><span class="line">      needDel.<span class="built_in">pb</span>(pos[i]);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>(needDel.<span class="built_in">empty</span>())&#123;  <span class="comment">// 注意空的判断，不要漏了</span></span><br><span class="line">  	cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">  	<span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (<span class="built_in">SZ</span>(needDel) == <span class="number">1</span>) &#123;</span><br><span class="line">    cout &lt;&lt; needDel[<span class="number">0</span>] &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; needDel[<span class="number">0</span>] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">sort</span>(<span class="built_in">all</span>(needDel));</span><br><span class="line">  ll l = needDel[<span class="number">0</span>], r = needDel[<span class="number">0</span>];</span><br><span class="line">  vector&lt;arr&gt; ans;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, <span class="built_in">SZ</span>(needDel) - <span class="number">1</span>) &#123;</span><br><span class="line">    ll p = needDel[i], bp = needDel[i - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (p - bp == <span class="number">1</span>) &#123;</span><br><span class="line">      r = p;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      ans.<span class="built_in">pb</span>(&#123;r - l, l, r&#125;);</span><br><span class="line">      l = p;</span><br><span class="line">      r = p;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  ans.<span class="built_in">pb</span>(&#123;r - l, l, r&#125;);</span><br><span class="line">  <span class="built_in">sort</span>(<span class="built_in">all</span>(ans));</span><br><span class="line">  cout &lt;&lt; ans.<span class="built_in">back</span>()[<span class="number">1</span>] &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; ans.<span class="built_in">back</span>()[<span class="number">2</span>] &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2064/submission/306477034</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="C-Remove-the-Ends"><a href="#C-Remove-the-Ends" class="headerlink" title="C. Remove the Ends"></a>C. Remove the Ends</h2><p>我们容易观察到，其实只有正数+负数这种可能，比如负数1+正数+负数2，相当于只选了负数1，正数1+负数+正数2，也相当于只选了正数2</p>
<p><a href="https://codeforces.com/contest/2064/submission/306518627">WA</a></p>
<p>这个WA是因为我没考虑到这里所说的正数，负数是可以不连续的，即为子序列，而不是子串</p>
<p>其实子序列反而好弄一点，用正数前缀和+负数后缀和就搞定了</p>
<p><a href="https://codeforces.com/contest/2064/submission/306520956">AC</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: C. Remove the Ends</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1005 (Div. 2)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2064/problem/C</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 3000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(),x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i,a) memset(i,a,sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int) a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll,3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB,DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN=<span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">2e5</span>)<span class="number">+10</span>,INF=<span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>)<span class="number">+3</span>;</span><br><span class="line"></span><br><span class="line">ll N,M,T,A[MAXN];</span><br><span class="line">ll zsum[MAXN],fsum[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">// 这是一道有关前后缀最大化得分的题</span></span><br><span class="line">	<span class="comment">// 只有正数+负数这种可能，比如负数1+正数+负数2，相当于只选了负数1</span></span><br><span class="line">	<span class="comment">// 正数1+负数+正数2，也相当于只选了正数2</span></span><br><span class="line">	<span class="comment">// 当然，这些正数是不一定相连的，负数也是同理</span></span><br><span class="line">	cin&gt;&gt;N;</span><br><span class="line">	zsum[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">FOR</span>(i,<span class="number">1</span>,N)&#123;</span><br><span class="line">		cin&gt;&gt;A[i];</span><br><span class="line">		<span class="keyword">if</span>(A[i]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">			zsum[i]=zsum[i<span class="number">-1</span>]+<span class="built_in">abs</span>(A[i]);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			zsum[i]=zsum[i<span class="number">-1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	fsum[N<span class="number">+1</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">ROF</span>(i,N,<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="keyword">if</span>(A[i]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">			fsum[i]=fsum[i<span class="number">+1</span>]+<span class="built_in">abs</span>(A[i]);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			fsum[i]=fsum[i<span class="number">+1</span>];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ll ans=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">FOR</span>(i,<span class="number">0</span>,N)&#123;</span><br><span class="line">		ans=<span class="built_in">max</span>(zsum[i]+fsum[i<span class="number">+1</span>],ans);</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;ans&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	cin&gt;&gt;T;</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		<span class="built_in">solve</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">WA</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2064/submission/306518627</span></span><br><span class="line"><span class="comment">这个WA是因为我没考虑到这里所说的正数，负数是可以不连续的，即为子序列，而不是子串</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2064/submission/306520956</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="D-Eating"><a href="#D-Eating" class="headerlink" title="D. Eating"></a>D. Eating</h2><p>感觉是一道数据结构+位运算题（当然这两个我都比较一般）</p>
<p>这道题最烦人的其实就是异或计算没有单调性，不是说我这个值满足，比这个值大的都满足</p>
<p>所以说位运算位运算，总归是要按位分析</p>
<p>看了一下题解，总结来说就是（msb可以理解二进制数的位数）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// == msb 通过计算判断能不能吃，msb必定减少</span></span><br><span class="line"><span class="comment">// &gt; msb 吃不了</span></span><br><span class="line"><span class="comment">// &lt; msb 可以吃</span></span><br></pre></td></tr></table></figure>

<p>因为&#x3D;&#x3D;msb的这种比较复杂的情况必定会让x的msb下降，</p>
<p><a href="https://codeforces.com/contest/2064/submission/306637832">WA</a></p>
<p>WA的原因是由于lower_bound()方式实现的__lg()有点问题，我们还是老老实实写一个_lg2()吧</p>
<p><a href="https://codeforces.com/contest/2064/submission/306654531">AC</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: D. Eating</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 1005 (Div. 2)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2064/problem/D</span></span><br><span class="line"><span class="comment">// Memory Limit: 512 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 5000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(),x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i,a) memset(i,a,sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int) a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll,ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll,3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB,DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN=<span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">2e5</span>)<span class="number">+10</span>,INF=<span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>)<span class="number">+3</span>;</span><br><span class="line"></span><br><span class="line">ll N,M,T,A[MAXN];</span><br><span class="line">ll pow2[<span class="number">40</span>];</span><br><span class="line">ll last[MAXN][<span class="number">35</span>];		<span class="comment">// 从后往前，比这位msb大的（包括相等）最大的编号在哪里（）</span></span><br><span class="line">ll sumA[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="keyword">inline</span> <span class="type">int</span> _lg2(ll n) &#123;</span><br><span class="line">    <span class="type">int</span> pos = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n) &#123;</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        pos++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;N&gt;&gt;M;</span><br><span class="line">	<span class="built_in">FOR</span>(i,<span class="number">1</span>,N)&#123;</span><br><span class="line">		cin&gt;&gt;A[i];</span><br><span class="line">		ll msb=_lg2(A[i]);</span><br><span class="line">		<span class="built_in">FOR</span>(j,<span class="number">0</span>,<span class="number">33</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>(j&lt;=msb)&#123;</span><br><span class="line">				last[i][j]=i;</span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				last[i][j]=last[i<span class="number">-1</span>][j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sumA[N<span class="number">+1</span>]=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">ROF</span>(i,N,<span class="number">1</span>)&#123;		<span class="comment">// 异或总和</span></span><br><span class="line">		sumA[i]=sumA[i<span class="number">+1</span>]^A[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// == msb 通过计算判断能不能吃，msb必定减少</span></span><br><span class="line">	<span class="comment">// &gt; msb 吃不了</span></span><br><span class="line">	<span class="comment">// &lt; msb 可以吃</span></span><br><span class="line">	<span class="built_in">FOR</span>(i,<span class="number">1</span>,M)&#123;</span><br><span class="line">		ll x;</span><br><span class="line">		cin&gt;&gt;x;</span><br><span class="line">		ll msb=_lg2(x);</span><br><span class="line">		ll idx=last[N][msb],upPos=N<span class="number">+1</span>;</span><br><span class="line">		<span class="keyword">while</span>(idx&gt;<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="keyword">if</span>((x^(sumA[idx<span class="number">+1</span>]^sumA[upPos]))&gt;=A[idx])&#123;</span><br><span class="line"><span class="comment">// #ifdef LOCAL</span></span><br><span class="line">    <span class="comment">// cerr&lt;&lt;i&lt;&lt;&#x27; &#x27; &lt;&lt; idx&lt;&lt;&#x27; &#x27;&lt;&lt;x&lt;&lt;&#x27; &#x27;&lt;&lt; A[idx]&lt;&lt;&#x27; &#x27;&lt;&lt; (x^(sumA[idx+1]^sumA[upPos])) &lt;&lt; &#x27;\n&#x27;;</span></span><br><span class="line"><span class="comment">// #endif</span></span><br><span class="line">				x=( (x^(sumA[idx<span class="number">+1</span>]^sumA[upPos]))^A[idx]);</span><br><span class="line">				msb=_lg2(x);</span><br><span class="line">				upPos=idx;</span><br><span class="line">				idx=last[idx<span class="number">-1</span>][msb];	<span class="comment">// 第idx个我已经吃了，那自然要看第idx-1个</span></span><br><span class="line">			&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="comment">// idx=upPos;	</span></span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;N-idx&lt;&lt;<span class="string">&#x27; &#x27;</span>; <span class="comment">// 第idx个吃不了，但他的idx后面一个位置是可以吃的</span></span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line"><span class="comment">// #ifdef LOCAL</span></span><br><span class="line">	<span class="comment">// FOR(i,1,7)&#123;</span></span><br><span class="line">		<span class="comment">// FOR(j,1,N)&#123;</span></span><br><span class="line">			<span class="comment">// cerr&lt;&lt;last[j][i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// cerr&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// #endif</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">	cin&gt;&gt;T;</span><br><span class="line">	pow2[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="built_in">FOR</span>(i,<span class="number">1</span>,<span class="number">38</span>)&#123;</span><br><span class="line">		pow2[i]=pow2[i<span class="number">-1</span>]*<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		<span class="built_in">solve</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2064/submission/306654531</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>codeforces题解</category>
      </categories>
  </entry>
  <entry>
    <title>Codeforces Round 998 (Div. 3) (D,E题解)</title>
    <url>/2025/02/14/Codeforces-Round-998-Div-3/</url>
    <content><![CDATA[<h2 id="D-Subtract-Min-Sort"><a href="#D-Subtract-Min-Sort" class="headerlink" title="D. Subtract Min Sort"></a>D. Subtract Min Sort</h2><p><a href="https://www.notion.so/CF-1004-B-Two-Large-Bags-1984539447bd8007badbda79025883b1?pvs=21">CF-1004-B. Two Large Bags</a> </p>
<p>和这题也没那么像，但是确实这种有操作，而且操作没有次数限制的，一定要找出一种操作模式，虽然说有可能浪费，但是绝对不会恶化现有情况，这是我对这类题目的自己的一点感悟</p>
<p>那么，这道题目，我们发现，如果有一个逆序对（比如说下面这个5，4）</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="number">8</span></span><br><span class="line"><span class="number">4</span> <span class="number">5</span> <span class="number">4</span> <span class="number">5</span> <span class="number">4</span> <span class="number">5</span> <span class="number">4</span> <span class="number">5</span></span><br></pre></td></tr></table></figure>

<p>我们肯定就要处理这个，我们要让5变小</p>
<p>但是这个还要判断逆序对呀，能不能再进一步，对所有数都进行一次这个操作？</p>
<p> 我们可以证明，这个操作一定是优的，因为他让前面的数减小了</p>
<p>于是我们顺着操作一遍，再判断是否是有序的就好了</p>
<h3 id="AC代码"><a href="#AC代码" class="headerlink" title="AC代码"></a>AC代码</h3><p><a href="https://codeforces.com/contest/2060/submission/305951401">https://codeforces.com/contest/2060/submission/305951401</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: D. Subtract Min Sort</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 998 (Div. 3)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2060/problem/D</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">2e5</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, T, A[MAXN], backup[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123; cin &gt;&gt; A[i]; &#125;</span><br><span class="line">  <span class="keyword">if</span> (A[<span class="number">1</span>] &gt; A[<span class="number">2</span>]) &#123;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 我们可以证明，这个操作一定是优的，因为他让前面的数减小了</span></span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N - <span class="number">1</span>) &#123;</span><br><span class="line">    ll t1 = A[i] - <span class="built_in">min</span>(A[i], A[i + <span class="number">1</span>]), t2 = A[i + <span class="number">1</span>] - <span class="built_in">min</span>(A[i], A[i + <span class="number">1</span>]);</span><br><span class="line">    A[i] = t1;</span><br><span class="line">    A[i + <span class="number">1</span>] = t2;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123; backup[i] = A[i]; &#125;</span><br><span class="line">  <span class="built_in">sort</span>(A + <span class="number">1</span>, A + <span class="number">1</span> + N);</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, N) &#123;</span><br><span class="line">    <span class="keyword">if</span> (backup[i] != A[i]) &#123;</span><br><span class="line">      cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2060/submission/305951401</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>

<h2 id="E-Graph-Composition"><a href="#E-Graph-Composition" class="headerlink" title="E. Graph Composition"></a>E. Graph Composition</h2><blockquote>
<p>G中存在一条从u到v的路径<br>真去找这条路径？不对不对，其实就是指u，v有共同祖先，处于同一集合内，用DSU就能解决<br><a href="https://www.notion.so/ABC-392-E-Cables-and-Servers-1954539447bd8066b430e9c4b4ea151f#1954539447bd801ca48cefc0430119c1">notion灵感</a><br>用类似于ABC-392-E这道题目的思路做，以边为主导，而不是被块拖着走，事情就会不一样。<br>然后具体的就是用并查集实现A边中会导致与B冲突的边不要，B中与剩余图（把冲突边删掉的A图）未联通的联通起来<br>然后就搞定了。<br><a href="https://codeforces.com/contest/2060/submission/306233804">AC</a></p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: E. Graph Composition</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round 998 (Div. 3)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/2060/problem/E</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"><span class="comment">// by znzryb</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Powered by CP Editor (https://cpeditor.org)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> FOR(i, a, b) for (int i = (a); i &lt;= (b); ++i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ROF(i, a, b) for (int i = (a); i &gt;= (b); --i)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> all(x) x.begin(), x.end()</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CLR(i, a) memset(i, a, sizeof(i))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> pb push_back</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SZ(a) ((int)a.size())</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;ll, ll&gt; pll;</span><br><span class="line"><span class="keyword">typedef</span> array&lt;ll, 3&gt; arr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">double</span> DB;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;DB, DB&gt; pdd;</span><br><span class="line"><span class="keyword">constexpr</span> ll MAXN = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">2e5</span>) + <span class="number">10</span>, INF = <span class="built_in">static_cast</span>&lt;ll&gt;(<span class="number">5e18</span>) + <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">ll N, M1,M2, T;</span><br><span class="line">pll edgeA[MAXN], edgeB[MAXN];</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DSU</span> &#123;  <span class="comment">// refer jiangly</span></span><br><span class="line">  vector&lt;<span class="type">int</span>&gt; fa, siz;</span><br><span class="line">  <span class="type">int</span> ln;</span><br><span class="line">  <span class="built_in">DSU</span>(<span class="type">int</span> n) &#123;</span><br><span class="line">    ln = n;</span><br><span class="line">    fa.<span class="built_in">resize</span>(ln + <span class="number">5</span>, <span class="number">0</span>), siz.<span class="built_in">resize</span>(ln + <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">FOR</span>(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">      fa[i] = i;</span><br><span class="line">      siz[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (fa[x] != x) &#123;</span><br><span class="line">      x = fa[x];</span><br><span class="line">      fa[x] = fa[fa[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">same</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">find</span>(x) == <span class="built_in">find</span>(y); &#125;</span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">merge</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    x = <span class="built_in">find</span>(x);</span><br><span class="line">    y = <span class="built_in">find</span>(y);</span><br><span class="line">    <span class="keyword">if</span> (x == y) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    siz[x] += siz[y];</span><br><span class="line">    fa[y] = x;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="type">int</span> <span class="title">size</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> siz[<span class="built_in">find</span>(x)]; &#125;</span><br><span class="line">  <span class="function"><span class="type">int</span> <span class="title">countFa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">FOR</span>(i, <span class="number">1</span>, ln) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fa[i] == i) ++res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  cin &gt;&gt; N &gt;&gt; M1 &gt;&gt; M2;</span><br><span class="line">  <span class="comment">// if (M1 == 0 &amp;&amp; M == 0) &#123;</span></span><br><span class="line">  	<span class="comment">// cout&lt;&lt;0&lt;&lt;&#x27;\n&#x27;;</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="function">DSU <span class="title">dsua</span><span class="params">(N)</span>, <span class="title">dsub</span><span class="params">(N)</span></span>;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, M1) &#123;</span><br><span class="line">    ll u, v;</span><br><span class="line">    cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">    edgeA[i].fi = u, edgeA[i].se = v;</span><br><span class="line">    dsua.<span class="built_in">merge</span>(u, v);</span><br><span class="line">    <span class="comment">// A[u].pb(v);</span></span><br><span class="line">    <span class="comment">// A[v].pb(u);</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, M2) &#123;</span><br><span class="line">    ll u, v;</span><br><span class="line">    cin &gt;&gt; u &gt;&gt; v;</span><br><span class="line">    edgeB[i].fi = u, edgeB[i].se = v;</span><br><span class="line">    dsub.<span class="built_in">merge</span>(u, v);</span><br><span class="line">    <span class="comment">// B[u].pb(v);</span></span><br><span class="line">    <span class="comment">// B[v].pb(u);</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 其实题目的要求大概就是A中在同一并查集的，B中也一定要在在同一并查集</span></span><br><span class="line">  <span class="comment">// 其实就是A，B图要是等价的（在联通性方面）</span></span><br><span class="line">  <span class="comment">// 然后注意需要以边的视角来看可能简单一点</span></span><br><span class="line">  ll ans = <span class="number">0</span>;</span><br><span class="line">  <span class="function">DSU <span class="title">mDsua</span><span class="params">(N)</span></span>;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, M1) &#123;</span><br><span class="line">    ll u = edgeA[i].fi, v = edgeA[i].se;</span><br><span class="line">    <span class="keyword">if</span> (dsub.<span class="built_in">same</span>(u, v)) &#123;  <span class="comment">// 保留这条边会不会时图A与图B发生冲突？</span></span><br><span class="line">      mDsua.<span class="built_in">merge</span>(u, v);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;  <span class="comment">// 相当于要把这条边删去</span></span><br><span class="line">      ++ans;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">FOR</span>(i, <span class="number">1</span>, M2) &#123;</span><br><span class="line">    ll u = edgeB[i].fi, v = edgeB[i].se;</span><br><span class="line">    <span class="keyword">if</span> (!mDsua.<span class="built_in">same</span>(u, v)) &#123;</span><br><span class="line">      mDsua.<span class="built_in">merge</span>(u, v);</span><br><span class="line">      ++ans;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">  cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">  cin &gt;&gt; T;</span><br><span class="line">  <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    <span class="built_in">solve</span>();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">AC</span></span><br><span class="line"><span class="comment">https://codeforces.com/contest/2060/submission/306233804</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>codeforces题解</category>
      </categories>
  </entry>
  <entry>
    <title>simpleDSU</title>
    <url>/2025/02/16/DSU-template/</url>
    <content><![CDATA[<p>简单并查集模版</p>
<p><a href="https://www.luogu.com.cn/record/203250040">提交记录洛谷</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">DSU</span> &#123;  <span class="comment">// refer jiangly</span></span><br><span class="line">  vector&lt;<span class="type">int</span>&gt; fa, siz;</span><br><span class="line">  <span class="type">int</span> ln;</span><br><span class="line">  <span class="built_in">DSU</span>(<span class="type">int</span> n) &#123;</span><br><span class="line">    ln = n;</span><br><span class="line">    fa.<span class="built_in">resize</span>(ln + <span class="number">5</span>, <span class="number">0</span>), siz.<span class="built_in">resize</span>(ln + <span class="number">5</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">FOR</span>(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">      fa[i] = i;</span><br><span class="line">      siz[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (fa[x] != x) &#123;</span><br><span class="line">      x = fa[x];</span><br><span class="line">      fa[x] = fa[fa[x]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">same</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123; <span class="keyword">return</span> <span class="built_in">find</span>(x) == <span class="built_in">find</span>(y); &#125;</span><br><span class="line">  <span class="function"><span class="type">bool</span> <span class="title">merge</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">    x = <span class="built_in">find</span>(x);</span><br><span class="line">    y = <span class="built_in">find</span>(y);</span><br><span class="line">    <span class="keyword">if</span> (x == y) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    siz[x] += siz[y];</span><br><span class="line">    fa[y] = x;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="type">int</span> <span class="title">size</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123; <span class="keyword">return</span> siz[<span class="built_in">find</span>(x)]; &#125;</span><br><span class="line">  <span class="function"><span class="type">int</span> <span class="title">countFa</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">FOR</span>(i, <span class="number">1</span>, ln) &#123;</span><br><span class="line">      <span class="keyword">if</span> (fa[i] == i) ++res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>template</category>
      </categories>
  </entry>
  <entry>
    <title>first-post</title>
    <url>/2025/02/13/first-post/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>RMQ-fenwickTree</title>
    <url>/2025/02/17/RMQ-fenwickTree/</url>
    <content><![CDATA[<p>改进版树状数组实现RMQ，可以单点修改，但不能区间修改。</p>
<p>主要是增加了构造函数，不用再单独调用初始化函数，然后将静态数组改成了vector，会比较适应codeforces</p>
<p><a href="https://www.luogu.com.cn/record/203503335">洛谷测试AC记录</a></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">struct</span> <span class="title class_">RMQ</span>&#123;</span><br><span class="line">	vector&lt;ll&gt; tr,origin;</span><br><span class="line">	ll sizeTr;</span><br><span class="line">	<span class="type">bool</span> isMax;</span><br><span class="line">	<span class="type">const</span> ll MAXval=<span class="built_in">static_cast</span>&lt;ll&gt; (<span class="number">1e18</span>)<span class="number">+3</span>;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">lowbit</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">		<span class="keyword">return</span> x&amp;(-x);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">RMQ</span>(ll n,<span class="type">bool</span> ismax)&#123;</span><br><span class="line">		isMax=ismax;</span><br><span class="line">		sizeTr=n;</span><br><span class="line">		<span class="keyword">if</span>(isMax)&#123;</span><br><span class="line">			tr.<span class="built_in">resize</span>(n<span class="number">+5</span>,<span class="number">0</span>),origin.<span class="built_in">resize</span>(n<span class="number">+5</span>,<span class="number">0</span>);</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			tr.<span class="built_in">resize</span>(n<span class="number">+5</span>,MAXval),origin.<span class="built_in">resize</span>(n<span class="number">+5</span>,MAXval);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">add</span><span class="params">(ll p,ll x)</span></span>&#123;</span><br><span class="line">		tr[p]=x,origin[p]=x;	</span><br><span class="line">		<span class="keyword">if</span>(isMax)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">lowbit</span>(p);i*=<span class="number">2</span>)&#123;	<span class="comment">// 遍历p下面的区间</span></span><br><span class="line">				tr[p]=<span class="built_in">max</span>(tr[p],tr[p-i]);</span><br><span class="line">			&#125;</span><br><span class="line">			p+=<span class="built_in">lowbit</span>(p);</span><br><span class="line">			<span class="keyword">while</span> (p&lt;=N) &#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">lowbit</span>(p);i*=<span class="number">2</span>)&#123;	<span class="comment">// 遍历p下面的区间</span></span><br><span class="line">					tr[p]=<span class="built_in">max</span>(tr[p],tr[p-i]);</span><br><span class="line">				&#125;</span><br><span class="line">				p+=<span class="built_in">lowbit</span>(p);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">lowbit</span>(p);i*=<span class="number">2</span>)&#123;	<span class="comment">// 遍历p下面的区间</span></span><br><span class="line">				tr[p]=<span class="built_in">min</span>(tr[p],tr[p-i]);</span><br><span class="line">			&#125;</span><br><span class="line">			p+=<span class="built_in">lowbit</span>(p);</span><br><span class="line">			<span class="keyword">while</span> (p&lt;=N) &#123;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="built_in">lowbit</span>(p);i*=<span class="number">2</span>)&#123;	<span class="comment">// 遍历i下面的区间</span></span><br><span class="line">					tr[p]=<span class="built_in">min</span>(tr[p],tr[p-i]);</span><br><span class="line">				&#125;</span><br><span class="line">				p+=<span class="built_in">lowbit</span>(p);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">inline</span> ll <span class="title">query</span><span class="params">(ll l,ll r)</span></span>&#123;</span><br><span class="line">		ll res;</span><br><span class="line">		<span class="keyword">if</span>(isMax)&#123;</span><br><span class="line">			res=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">while</span> (l&lt;=r) &#123;</span><br><span class="line">				<span class="keyword">if</span>(r-<span class="built_in">lowbit</span>(r)&lt;l)&#123;</span><br><span class="line">					res=<span class="built_in">max</span>(origin[r],res);</span><br><span class="line">					r-=<span class="number">1</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					res=<span class="built_in">max</span>(tr[r],res);</span><br><span class="line">					r-=<span class="built_in">lowbit</span>(r);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">			res=MAXval;</span><br><span class="line">			<span class="keyword">while</span> (l&lt;=r) &#123;</span><br><span class="line">				<span class="keyword">if</span>(r-<span class="built_in">lowbit</span>(r)&lt;l)&#123;</span><br><span class="line">					res=<span class="built_in">min</span>(origin[r],res);</span><br><span class="line">					r-=<span class="number">1</span>;</span><br><span class="line">				&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">					res=<span class="built_in">min</span>(tr[r],res);</span><br><span class="line">					r-=<span class="built_in">lowbit</span>(r);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> res;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>template</category>
      </categories>
  </entry>
</search>
